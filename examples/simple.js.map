{"version":3,"sources":["webpack:///./examples/simple.jsx"],"names":["NODES","id","x","y","Node","props","data","console","log","WrappedNode","getNodeData","nodes","map","nodeData","idx","App","render","Component","SimpleApp","width","height","onNodeChange","Wrapper","createClass","getInitialState","connections","state","before","after","setState","document","getElementById"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;AAEA,KAAMA,QAAQ,CAAC,EAAEC,IAAK,CAAP,EAAUC,GAAG,GAAb,EAAkBC,GAAG,GAArB,EAAD,EAA6B,EAAEF,IAAK,CAAP,EAAUC,GAAG,GAAb,EAAkBC,GAAG,GAArB,EAA7B,CAAd;;AAEA,UAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,UAAO;AAAA;AAAA;AAAA;AAAaA,WAAMC,IAAN,CAAWL,EAAxB;AAAA;AAAA,IAAP;AACD;;AAEDM,SAAQC,GAAR,CAAY,iBAAZ;;AAEA,KAAMC,cAAc,4BAAW;AAAA,UAAY;AACzCC,kBAAa,qBAACL,KAAD;AAAA,cAAWA,MAAMC,IAAjB;AAAA;AAD4B,IAAZ;AAAA,EAAX,EAEhBF,IAFgB,CAApB;;AAIA,KAAMO,QAAQX,MAAMY,GAAN,CAAU,UAACC,QAAD,EAAWC,GAAX;AAAA,UAAmB,8BAAC,WAAD,IAAa,KAAKA,GAAlB,EAAuB,MAAMD,QAA7B,GAAnB;AAAA,EAAV,CAAd;AACA;;KACME,G;;;;;;;;;iBACJC,M,qBAAS;AACP,YAAO;AAAA;AAAA;AAAML;AAAN,MAAP;AACD,I;;;GAHe,gBAAMM,S;;AAMxB,KAAMC,YAAY,iCAAgB;AAChCC,UAAO,GADyB;AAEhCC,WAAQ,GAFwB;AAGhCC,iBAAc,sBAACpB,EAAD,EAAKK,IAAL;AAAA,YAAcC,QAAQC,GAAR,CAAY,iBAAZ,EAA+BP,EAA/B,EAAmCK,IAAnC,CAAd;AAAA;AAHkB,EAAhB,EAIfS,GAJe,CAAlB;;AAMA,KAAMO,UAAU,gBAAMC,WAAN,CAAkB;AAAA;AAChCC,kBADgC,6BACd;AAChB,YAAO;AACLC,oBAAa;AADR,MAAP;AAGD,IAL+B;AAOhCT,SAPgC,oBAOvB;AAAA;;AACP,YAAO,8BAAC,SAAD;AACL,oBAAa,KAAKU,KAAL,CAAWD,WADnB;AAEL,4BAAqB,6BAACE,MAAD,EAASC,KAAT;AAAA,gBAAmB,OAAKC,QAAL,CAAc,EAAEJ,aAAaG,KAAf,EAAd,CAAnB;AAAA;AAFhB,OAAP;AAID;AAZ+B,EAAlB,CAAhB;;AAeA,oBAASZ,MAAT,CAAgB,8BAAC,OAAD,OAAhB,EAA6Bc,SAASC,cAAT,CAAwB,iBAAxB,CAA7B,E","file":"simple.js","sourcesContent":["import { createContainer, createNode } from 'rc-fringing';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'rc-fringing/assets/index.less';\n\nconst NODES = [{ id : 1, x: 100, y: 200 }, { id : 2, x: 200, y: 100}];\n\nfunction Node(props) {\n  return <div> Node [{props.data.id}] </div>\n}\n\nconsole.log('>> NodeProvider', createNode);\n\nconst WrappedNode = createNode(collect => ({\n  getNodeData: (props) => props.data,\n}))(Node);\n\nconst nodes = NODES.map((nodeData, idx) => <WrappedNode key={idx} data={nodeData} />);\n// @Provider(...)\nclass App extends React.Component {\n  render() {\n    return <div>{nodes}</div>\n  }\n}\n\nconst SimpleApp = createContainer({\n  width: 800,\n  height: 600,\n  onNodeChange: (id, data) => console.log('>> onNodeChange', id, data),\n})(App);\n\nconst Wrapper = React.createClass({\n  getInitialState() {\n    return {\n      connections: [],\n    };\n  },\n  \n  render() {\n    return <SimpleApp\n      connections={this.state.connections}\n      onConnectionsChange={(before, after) => this.setState({ connections: after })}\n    />;\n  }\n});\n\nReactDOM.render(<Wrapper />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/simple.jsx"],"sourceRoot":""}