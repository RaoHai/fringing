{"version":3,"sources":["webpack:///./examples/group.js"],"names":["NODES","id","x","y","Node","props","data","WrappedNode","getNodeData","Group","children","WrappedGroup","position","nodes","map","nodeData","idx","App","render","Component","SimpleApp","width","height","onNodeChange","console","log","connects","from","to","groups","document","getElementById"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;AAEA,KAAMA,QAAQ,CAAC,EAAEC,IAAK,CAAP,EAASC,GAAG,GAAZ,EAAiBC,GAAG,GAApB,EAAD,EAA2B,EAAEF,IAAK,CAAP,EAAUC,GAAG,GAAb,EAAkBC,GAAG,GAArB,EAA3B,CAAd;;AAEA,UAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,UAAO;AAAA;AAAA;AAAA;AAAaA,WAAMC,IAAN,CAAWL,EAAxB;AAAA;AAAA,IAAP;AACD;;AAED,KAAMM,cAAc,4BAAW;AAAA,UAAY;AACzCC,kBAAa,qBAACH,KAAD;AAAA,cAAWA,MAAMC,IAAjB;AAAA;AAD4B,IAAZ;AAAA,EAAX,EAEhBF,IAFgB,CAApB;;AAIA,UAASK,KAAT,CAAeJ,KAAf,EAAsB;AACpB,UAAO;AAAA;AAAA;AAAA;AAAcA,WAAMK;AAApB,IAAP;AACD;;AAED,KAAMC,eAAe,6BAAY;AAC/BV,OAAI,SAD2B;AAE/BW,aAAU,EAACV,GAAG,GAAJ,EAASC,GAAG,GAAZ;AAFqB,EAAZ,EAGlBM,KAHkB,CAArB;;AAKA,KAAMI,QAAQb,MAAMc,GAAN,CAAU,UAACC,QAAD,EAAWC,GAAX;AAAA,UAAmB,8BAAC,WAAD,IAAa,KAAKA,GAAlB,EAAuB,MAAMD,QAA7B,GAAnB;AAAA,EAAV,CAAd;AACA;;KACME,G;;;;;;;;;iBACJC,M,qBAAS;AACP,YAAO;AAAC,mBAAD;AAAA;AACFL;AADE,MAAP;AAGD,I;;;GALe,gBAAMM,S;;AAQxB,KAAMC,YAAY,iCAAgB;AAChCC,UAAO,GADyB;AAEhCC,WAAQ,GAFwB;AAGhCC,iBAAc,sBAACtB,EAAD,EAAKK,IAAL;AAAA,YAAckB,QAAQC,GAAR,CAAY,iBAAZ,EAA+BxB,EAA/B,EAAmCK,IAAnC,CAAd;AAAA,IAHkB;AAIhCoB,aAAU,CAAC,EAAEC,MAAM,CAAR,EAAWC,IAAI,CAAf,EAAD,CAJsB;AAKhCC,WAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT;AALwB,EAAhB,EAMfZ,GANe,CAAlB;;AASA,oBAASC,MAAT,CAAgB,8BAAC,SAAD,OAAhB,EAA+BY,SAASC,cAAT,CAAwB,iBAAxB,CAA/B,E","file":"group.js","sourcesContent":["import { createContainer, createNode, createConnects, createGroup } from 'rc-fringing';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'rc-fringing/assets/index.less';\n\nconst NODES = [{ id : 1,x: 100, y: 200}, { id : 2, x: 200, y: 100}];\n\nfunction Node(props) {\n  return <div> Node [{props.data.id}] </div>\n}\n\nconst WrappedNode = createNode(collect => ({\n  getNodeData: (props) => props.data,\n}))(Node);\n\nfunction Group(props) {\n  return <div> Group: {props.children}</div>\n}\n\nconst WrappedGroup = createGroup({\n  id: 'group_1',\n  position: {x: 100, y: 100}\n})(Group);\n\nconst nodes = NODES.map((nodeData, idx) => <WrappedNode key={idx} data={nodeData} />);\n// @Provider(...)\nclass App extends React.Component {\n  render() {\n    return <WrappedGroup>\n        {nodes}\n      </WrappedGroup>\n  }\n}\n\nconst SimpleApp = createContainer({\n  width: 800,\n  height: 600,\n  onNodeChange: (id, data) => console.log('>> onNodeChange', id, data),\n  connects: [{ from: 1, to: 2}],\n  groups: [[1, 2], [2, 3]]\n})(App);\n\n\nReactDOM.render(<SimpleApp />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/group.js"],"sourceRoot":""}